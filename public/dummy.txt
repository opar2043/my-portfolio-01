/*
To use Supabase in your project, follow these steps:

1. Install Supabase JS client:
    npm install @supabase/supabase-js

2. Create a Supabase client instance in your code (e.g., in a file like supabaseClient.js):

    import { createClient } from '@supabase/supabase-js';

    const supabaseUrl = 'https://YOUR_PROJECT_ID.supabase.co';
    const supabaseKey = 'YOUR_ANON_KEY';
    export const supabase = createClient(supabaseUrl, supabaseKey);

3. Use the `supabase` instance to interact with your database, authentication, or storage.

Example: Fetch data from a table

    import { supabase } from './supabaseClient';

    async function fetchData() {
      const { data, error } = await supabase
         .from('your_table_name')
         .select('*');
      console.log(data, error);
    }

Replace YOUR_PROJECT_ID and YOUR_ANON_KEY with your actual Supabase project credentials from https://app.supabase.com.

For more details, see: https://supabase.com/docs
*/





// Insert data into a table
async function insertData() {
    const { data, error } = await supabase
        .from('your_table_name')
        .insert([{ column1: 'value1', column2: 'value2' }]);
    console.log(data, error);
}

// Get data from a table
async function getData() {
    const { data, error } = await supabase
        .from('your_table_name')
        .select('*');
    console.log(data, error);
}

// Sign up a new user
async function signUp(email, password) {
    const { user, error } = await supabase.auth.signUp({
        email,
        password,
    });
    console.log(user, error);
}

// Sign in an existing user
async function signIn(email, password) {
    const { user, error } = await supabase.auth.signInWithPassword({
        email,
        password,
    });
    console.log(user, error);
}